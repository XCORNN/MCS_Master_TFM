#!/bin/bash

# Configuración del script
set -e

# Variables de configuración
MSSQL_SA_PASSWORD='<YourStrong!Passw0rd>'
MSSQL_PID='evaluation'
SQL_ENABLE_AGENT='y'
SQL_INSTALL_USER=$(whoami)  # Usa el usuario que está ejecutando el script
SQL_INSTALL_USER_PASSWORD='<YourStrong!Passw0rd>'

# Verificar que la variable MSSQL_SA_PASSWORD esté configurada
if [ -z "$MSSQL_SA_PASSWORD" ]; then
  echo "La variable MSSQL_SA_PASSWORD debe estar configurada para la instalación desatendida."
  exit 1
fi

echo "Actualizando el sistema..."
sudo apt update && sudo apt upgrade -y

echo "Instalando dependencias..."
sudo apt install -y gnupg2 apt-transport-https wget curl

echo "Importando la clave pública de Microsoft..."
wget -q -O- https://packages.microsoft.com/keys/microsoft.asc | \
gpg --dearmor | sudo tee /usr/share/keyrings/microsoft.gpg > /dev/null

echo "Agregando el repositorio de Microsoft para SQL Server..."
echo "deb [signed-by=/usr/share/keyrings/microsoft.gpg arch=amd64,armhf,arm64] https://packages.microsoft.com/ubuntu/22.04/mssql-server-2022 jammy main" | \
sudo tee /etc/apt/sources.list.d/mssql-server-2022.list

echo "Actualizando los repositorios..."
sudo apt update

echo "Instalando SQL Server..."
sudo apt install -y mssql-server

echo "Configurando SQL Server..."
sudo MSSQL_SA_PASSWORD=$MSSQL_SA_PASSWORD \
     MSSQL_PID=$MSSQL_PID \
     /opt/mssql/bin/mssql-conf -n setup accept-eula

echo "Instalando herramientas de SQL Server y unixODBC developer..."
curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
sudo apt-get update
sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev

# Agregar herramientas de SQL Server al PATH
echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bash_profile
echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
source ~/.bashrc

# Habilitar el Agente SQL Server
if [ "$SQL_ENABLE_AGENT" == "y" ]; then
  echo "Habilitando el Agente SQL Server..."
  sudo /opt/mssql/bin/mssql-conf set sqlagent.enabled true
fi

# Configurar el firewall para permitir el tráfico en el puerto 1433
echo "Configurando UFW para permitir el tráfico en el puerto 1433..."
sudo ufw allow 1433/tcp
sudo ufw reload

# Reiniciar SQL Server
echo "Reiniciando SQL Server..."
sudo systemctl restart mssql-server

# Verificar que SQL Server está en funcionamiento
echo "Esperando a que SQL Server se inicie..."
counter=1
errstatus=1
while [ $counter -le 5 ] && [ $errstatus -eq 1 ]; do
  sleep 3s
  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P $MSSQL_SA_PASSWORD -Q "SELECT @@VERSION" 2>/dev/null
  errstatus=$?
  ((counter++))
done

# Mostrar error si no se puede conectar
if [ $errstatus -ne 0 ]; then
  echo "No se puede conectar a SQL Server, la instalación ha fallado."
  exit $errstatus
fi

# Crear un usuario adicional con privilegios de sysadmin si es necesario
if [ -n "$SQL_INSTALL_USER" ] && [ -n "$SQL_INSTALL_USER_PASSWORD" ]; then
  echo "Creando el usuario $SQL_INSTALL_USER..."
  /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P $MSSQL_SA_PASSWORD -Q "CREATE LOGIN [$SQL_INSTALL_USER] WITH PASSWORD=N'$SQL_INSTALL_USER_PASSWORD', DEFAULT_DATABASE=[master], CHECK_EXPIRATION=ON, CHECK_POLICY=ON; ALTER SERVER ROLE [sysadmin] ADD MEMBER [$SQL_INSTALL_USER]"
fi

echo "¡Instalación completada con éxito!"
